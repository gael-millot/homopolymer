/*
#########################################################################
##                                                                     ##
##     main.nf                                                         ##
##     Analysis of homopolymers in a batch of sequences                ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/



//////// variables that will be used only in the main.nf

// variables exported to the main.nf environment. See https://www.nextflow.io/docs/latest/config.html#scope-env
env {
    //// path and files
    in_path="/mnt/c/Users/gael/Documents/Git_projects/homopolymer/dataset"
    fasta_file="integrases.fasta"
    cute_path="https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/-/raw/v11.3.0/cute_little_R_functions.R" // single character string indicating the file (and absolute pathway) of the required cute_little_R_functions toolbox. With ethernet connection available, this can also be used: "https://gitlab.pasteur.fr/gmillot/cute_little_R_functions/raw/v5.1.0/cute_little_R_functions.R" or local "C:\\Users\\Gael\\Documents\\Git_projects\\cute_little_R_functions\\cute_little_R_functions.R"
}

//////// end variables that will be used only in the main.nf




//////// variables that will be used below (and potentially in the main.nf file)

//// must be also exported
system_exec = 'local' // the system that runs the workflow. Either 'local' or 'slurm' or 'slurm_local' (test using the head of the cluster)
out_path="$baseDir/results" // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/Gael/Desktop' 
//// end must be also exported

//// general variables
result_folder_name="20220120_test"
//// end general variables

//// slurm variables
fastqueue = 'common,dedicated' // fast for -p option of slurm. Example: fastqueue = 'common,dedicated'. Example: fastqueue = 'hubbioit'
fastqos= '--qos=fast' // fast for --qos option of slurm. Example: fastqos= '--qos=fast'
normalqueue = 'common,dedicated' // normal for -p option of slurm. Example: normalqueue = 'bioevo'
normalqos = '--qos=hubbioit' // normal for --qos option of slurm. Example: normalqos = '--qos=dedicated'
longqueue = 'common,dedicated' // slow for -p option of slurm. Example: longqueue = 'bioevo'
longqos = '--qos=hubbioit' // slow for --qos option of slurm. Example: longqos = '--qos=dedicated'
add_options = ' ' // additional option of slurm. Example: addoptions = '--exclude=maestro-1101,maestro-1034' or add_options = ' '
//// end slurm variables

//////// end variables that will be used below



//////// Pre processing

int secs = (new Date().getTime())/1000
out_path="${out_path}/${result_folder_name}_${secs}"

//////// end Pre processing



//////// variables used here and also in the main.nf file

env {
    system_exec = "${system_exec}"
    out_path = "${out_path}"
}

//////// end variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = "${system_exec}"
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/nf_report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/nf_trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/nf_timeline.html"
}

// .dot picture of the workflow. Only one file allowed
dag {
    enabled = true
    file = "${out_path}/reports/nf_dag.png" // Warning: require graphviz installed in the system, see protocol 136
}


// define container parameters

singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    if(system_exec == 'slurm' || system_exec == 'slurm_local'){
        runOptions = '--no-home --bind /pasteur'
    }else{
        runOptions = '--no-home' // --no-home prevent singularity to mount the $HOME path and thus forces singularity to work with only what is inside the container
    }
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. Here, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d acc√®s
    if(system_exec == 'slurm'){
        cacheDir = '/pasteur/zeus/projets/p01/BioIT/gmillot/14985_loot/singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
    }else if(system_exec == 'slurm_local'){
        cacheDir = 'singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }else{
        cacheDir = '/mnt/c/Users/Gael/Documents/singularity' // "$baseDir/singularity" can be used but do not forget double quotes.
    }
}


//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    // executor='local' // no need because already defined above in the executor scope
    if(system_exec == 'slurm'){
        queue = "$fastqueue"
        clusterOptions = "$fastqos $add_options"
        scratch=false
        maxRetries=1
        errorStrategy='retry'
    }else{
        maxRetries=0
        errorStrategy='terminate'
    }
    // all the processes of the main.nf file with the label 'bedtools' will use this directives by default
    withLabel: bash {
        container='gmillot/bash-extended_v4.0:gitlab_v8.0'
        cpus=16 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }

    withLabel: python {
        container='gmillot/python_v3.9.10_extended_v2.0:gitlab_v8.4'
        cpus=16 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }

    withLabel: r_ext {
        container='gmillot/r_v4.1.2_extended_v2.0:gitlab_v8.2'
        cpus=1 // only used when name = "local" in the executor part above
        memory='64G' // only used when name = "local" in the executor part above
    }

}

//////// end directives